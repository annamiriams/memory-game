/* I already can't remember where I saw this suggested, but I think I'll get rid of it? I'm too tired to commit to anything right now. */
* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    display: flex;
    background: #6996BF;
}

button {
    width: 80px;
    height: 50px;
    border: 0px;
    border-radius: 100%;
    background-color: #5F5253;
    color: #C7CAC4;
}

.buttons {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin: 40px;
}

.board {
    width: 700px;
    height: 700px;
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    position: absolute;
    /* W3 CSS Top/Left Properties: If position absolute:
        "The top property sets the top edge of an element to a unit above/below the top edge of its nearest positioned ancestor. 
        "The left property sets the left edge of an element to a unit to the left of the left edge of its nearest positioned ancestor." */
    top: 50%;
    left: 50%;
    /* SheCodes: "The transform: translate(-50%, -50%); CSS property is used to move an element horizontally and vertically by a specified percentage of its own size. It is often used to center an element both horizontally and vertically within its parent container. */
    transform: translate(-50%, -50%);
}

.card {
    /* relative position of the parent element allows us to position the children absolutely, thereby stacking the elements on top of each other (see position: absolute in face class) */
    position: relative;
    /* this got the 4x3 grid */
    width: 25%;
    /* allows for a 3D transition when cards are clicked */
    transform-style: preserve-3d;
    /* changed this because i wasn't noticing huge difference as i played around with the settings. left at one second even. */
    transition: 1s;
}

/* this provides a visual effect when the card is clicked (by applying a .2s transition to its size). right now it only seems to be doing it on the transition from back to front, not front to back, but that should be fine because during game play, the cards should always flip back over on their own. somehow this actually stopped working and I'm not sure why. Take out if that's still true by the end. still not working after another day of edits. */
.card:active {
    transform: scale(1);
    transition: transform 1s;
}

.cardFront, 
.cardBack {
    width: 90%;
    /* to make the cards square (in order to keep the card shape of the Wingspan image */
    aspect-ratio: 1/1;
    border: 1px solid #96AFC5;
    border-radius: 10%;
    /* relative position of the parent element allows us to position the children absolutely, thereby stacking the elements on top of each other (see position: absolute in face class) */
    position: absolute;
    /* controls the reverse side of just the respective element; keeping either cardFront or cardBack visible will cause the image to flicker during the 3D transition. if i don't include this, then when cards flip, it'll just show the reverse image of the original card side. with backface-visibility hidden, the flipped card will show the other image. */
    backface-visibility: hidden;
}

.cardBack {
    /* since backface-visibility is set, flipping a card over flips BOTH cards over entirely and shows the blank side of BOTH cards. by transforming .cardBack by 180deg, i'm actually flipping over cardBack to show the original image. it really helps me to think of this as if i have two images printed on two pieces of paper in front of me. if i stack them image side up, and turn them over, the other side is blank. i need to rotate the bottom image by 180deg in order for that image to show up on the other side of the top image. */
    transform: rotateY(180deg);
}

.card.flip {
    /* this rotates the card 180deg. using add and remove in js, i'm basically turning this transform on and off */
    transform: rotateY(180deg);
}